#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2005-2007 Martin Böhm
#
# AUTHOR:
# Martin Böhm <martin.bohm@ubuntu.com>
#
# This file is part of GDebi
#
# GDebi is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# GDebi is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GDebi; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

import sys
import apt
import os.path
from qt import *
from kdeui import *
from kdecore import *

from optparse import OptionParser
from GDebi.GDebiKDE import GDebiKDE

from gettext import gettext as _
import gettext


if __name__ == "__main__":
    data="/usr/share/gdebi"

    localesApp="gdebi"
    localesDir="/usr/share/locale"
    gettext.bindtextdomain(localesApp, localesDir)
    gettext.textdomain(localesApp)

    parser = OptionParser()
    parser.add_option("-n", "--non-interactive",
                      action="store_true", dest="non_interactive",
                      default=False,
                      help=_("Run non-interactive (dangerous!)"))
    (options, args) = parser.parse_args()
    afile = ""
    if len(args) >= 1:
        afile = args[0]        
    try:
        app = KApplication(["gdebi-kde"],"Kdefile")
	gdebi = GDebiKDE(datadir=data,options=options,file=afile)
	app.setMainWidget(gdebi)
	gdebi.show()
        if options.non_interactive == True:
            gdebi.installButtonClicked()

        #app.run()
	app.exec_loop()
    except SystemError, e:
        err_header = _("Software index is broken")
        err_body = _("This is a major failure of your software " 
                    "management system. Please check for broken packages "
                    "with synaptic, check the file permissions and "
                    "correctness of the file '/etc/apt/sources.list' and "
                    "reload the software information with: "
                    "'sudo apt-get update' and 'sudo apt-get install -f'."
                    )
        self.show_alert(gtk.MESSAGE_ERROR, err_header, err_body)
        sys.exit(1)
    app.run()
